{# templates/message/index.html.twig #}
{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('styles/message.css') }}">
{% endblock %}

{% block body %}
<div class="header">
    <div class="main-content">
        <div class="header-section">
            <div class="welcome-text">
                <h1>Tes messages ðŸ“¨</h1>
                <p>{{ lastMessages|length }} nouveaux Messages</p>
            </div>
            <div class="header-mobile dropdown-container">
                <img src="{{ asset('icone/navbar.svg') }}" class="nav-mobile" alt="">
                <div class="profile-circle">
                    <p>{{ nom|first }}</p>
                </div>
                <div class="dropdown-menu">
                    <div class="dropdown-header">
                        <div class="user-email">{{ nom }}</div>
                    </div>
                    <div class="dropdown-content">
                        <a href="{{ path('app_logout') }}" class="dropdown-item">
                            DÃ©connexion
                            <svg height="20" width="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="#000000" transform="matrix(-1, 0, 0, 1, 0, 0)">
                                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                <g id="SVGRepo_iconCarrier">
                                    <path d="M14 4L17.5 4C20.5577 4 20.5 8 20.5 12C20.5 16 20.5577 20 17.5 20H14M3 12L15 12M3 12L7 8M3 12L7 16" stroke="#000000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                </g>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <div class="pagesMessage">
            <div class="lastMessages">
                <div id="NewMessage" class="NewMessage">
                    <p>Nouveau Message</p>
                    <img src="{{ asset('icone/plus.svg') }}" alt="">
                </div>
                {% for message in lastMessages %}
                    <a href="{{ path('messages_show', {'id': message.id}) }}" class="MessageBox">
                        <div class="profile">
                            <p>{{ message.recipient.firstname|first }}</p>
                        </div>
                        <div class="message-content">
                            <h2>{{ message.recipient.firstname }}</h2>
                            <p>{{ message.content }}</p>
                        </div>
                    </a>
                {% endfor %}
            </div>

            {% if not messages %}
                <div class="messageOpen">
                    <p>Veuillez sÃ©lectionner une conversation</p>
                </div>
            {% else %}
                <div class="messageOpen">
                    <div class="messageDiv" id="scroll">
                        {% for message in messages %}
                            {% if message.recipient.id == app.user.id %}
                                <div class="messageOther">
                                    <div class="profile">
                                        <p>{{ message.sender.firstname|first }}</p>
                                    </div>
                                    <p>{{ message.content }}</p>
                                </div>
                            {% else %}
                                <div class="messageAuthor">
                                    <p>{{ message.content }}</p>
                                </div>
                            {% endif %}
                        {% endfor %}
                        <div style="display: none;" data-message-id="{{ lastId }}">{{ lastId }}</div>
                    </div>
                    <div>
                        <form action="{{ path('messages_new', {'id': idPeople}) }}" method="post">
                            <div class="form-group">
                                <input type="text" class="form-control" id="message" placeholder="Entrez votre message" name="message" required></input>
                                <button type="submit" class="sendBtn">
                                    <img src="{{ asset('icone/send.svg') }}" alt="logo" class="icon">
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            {% endif %}
        </div>
    </div>

    <div class="formAdd" id="formAdd">
        <form action="{{ path('messages_new', {'id': idPeople}) }}" method="post">
            <div class="formAddContent">
                <p id="close" class="close">X</p>
                <div class="custom-dropdown" id="myCustomDropdown">
                    <div type="button" class="custom-dropdown-button" id="customDropdownButton">SÃ©lectionner un utilisateur</div>
                    <input type="hidden" id="selectedOptionInput" name="selectedOption" class="custom-dropdown-hidden-input">
                    <div class="custom-dropdown-content">
                        {% for user in allUsers %}
                            <a data-value="{{user.id}}" class="custom-dropdown-item">{{ user.firstname }} {{ user.lastName }}</a>
                        {% endfor %}
                    </div>
                    <input type="text" class="form-control" id="message" placeholder="Entrez votre message" name="message" rows="3"></input>
                    <button type="submit" class="sendBtnForm">
                        <p>Envoyer</p>
                        <img src="{{ asset('icone/send.svg') }}" alt="logo" class="icon">
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>

    const messagesContainer = document.getElementById("scroll");
    if (messagesContainer) {
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

const partnerId = {{ idPeople }};
let lastId = {{ lastId }};
const currentUserId = {{ app.user.id }};

function fetchLatestMessages() {
    console.log(`Fetching messages with lastId: ${lastId}`);
    
    fetch(`/messages/latest/${partnerId}/${lastId}`)
        .then(response => response.json())
        .then(data => {
            console.log('Nouveaux messages reÃ§us:', data);
            
            if (data.length === 0) return; 
            
            const messagesContainer = document.getElementById("scroll");
            if (!messagesContainer) return;
            
            data.forEach(message => {
                const existingMessage = document.querySelector(`[data-message-id="${message.id}"]`);
                if (existingMessage) return; 
                
                const messageElement = document.createElement('div');
                messageElement.className = message.sender_id === currentUserId ? 'messageAuthor' : 'messageOther';
                messageElement.setAttribute('data-message-id', message.id);
                messageElement.innerHTML = `
                    <div class="profile">
                        <p>${message.firstName.charAt(0)}</p>
                    </div>
                    <p>${message.content}</p>
                `;
                messagesContainer.appendChild(messageElement);
                
                if (message.id > lastId) {
                    lastId = message.id;
                    console.log(`lastId mis Ã  jour: ${lastId}`);
                }
            });
            
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        })
        .catch(error => console.error('Erreur lors de la rÃ©cupÃ©ration des messages:', error));
}


    setInterval(fetchLatestMessages, 5000);

    const customDropdown = document.getElementById('myCustomDropdown');
    const customDropdownButton = document.getElementById('customDropdownButton');
    const customDropdownItems = document.querySelectorAll('.custom-dropdown-item');
    const selectedOptionInput = document.getElementById('selectedOptionInput');

    if (customDropdownButton && customDropdown) {
        customDropdownButton.addEventListener('click', function(event) {
            event.stopPropagation();
            customDropdown.classList.toggle('active');
        });

        customDropdownItems.forEach(item => {
            item.addEventListener('click', function(event) {
                event.stopPropagation();
                const itemText = this.textContent;
                const itemValue = this.getAttribute('data-value');
                
                customDropdownButton.textContent = itemText;
                if (selectedOptionInput) {
                    selectedOptionInput.value = itemValue;
                }
                customDropdown.classList.remove('active');
            });
        });

        document.addEventListener('click', function(event) {
            if (!customDropdown.contains(event.target)) {
                customDropdown.classList.remove('active');
            }
        });
    }

    const closeBtn = document.getElementById('close');
    if (closeBtn) {
        closeBtn.addEventListener('click', function() {
            const formAdd = document.getElementById('formAdd');
            if (formAdd) {
                formAdd.style.display = 'none';
            }
        });
    }

    const newMessageBtn = document.getElementById('NewMessage');
    if (newMessageBtn) {
        newMessageBtn.addEventListener('click', function() {
            const formAdd = document.getElementById('formAdd');
            if (formAdd) {
                formAdd.style.display = 'flex';
            }
        });
    }
</script>
{% endblock %}

